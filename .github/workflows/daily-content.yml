name: Daily Content Pipeline

on:
  schedule:
    - cron: "0 14 * * *"  # 10am ET
    - cron: "0 18 * * *"  # 2pm ET
    - cron: "0 22 * * *"  # 6pm ET
  workflow_dispatch: {}

jobs:
  generate-content:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Clear proxy environment
        shell: bash
        run: |
          unset HTTP_PROXY HTTPS_PROXY ALL_PROXY NO_PROXY || true
      
      - name: Install dependencies (locked)
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip uninstall -y openai httpx || true
          pip install --force-reinstall --no-deps openai==1.51.0
          pip install --force-reinstall --no-deps httpx==0.27.2
          pip install feedparser==6.0.11 requests==2.31.0 python-frontmatter==1.1.0 markdown==3.5.1 numpy==1.26.3 scikit-learn==1.4.0 python-dotenv==1.0.0

      - name: Verify runtime & versions
        shell: bash
        run: |
          echo "=== Versions installed ==="
          python -c "import openai; import httpx; import inspect; \
print('openai version:', openai.__version__); \
print('httpx version:', httpx.__version__); \
print('openai base client file:', inspect.getfile(openai._base_client)); \
assert openai.__version__ == '1.51.0', 'Wrong openai version'; \
assert httpx.__version__ == '0.27.2', 'Wrong httpx version'"
          echo "=== compose.py first 40 lines ==="
          sed -n '1,40p' scripts/compose.py

      - name: Ingest sources
        env:
          PPLX_API_KEY: ${{ secrets.PPLX_API_KEY }}
          USE_PPLX: "0"
        run: |
          python scripts/ingest.py --countries do co --target 14
      
      - name: Compose articles
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/compose.py --mix "brief=5,explainer=3,trend=1"
      
      - name: Quality check
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/quality.py --threshold 0.80
      
      - name: Publish articles
        run: |
          python scripts/publish.py
      
      - name: Commit and push
        shell: bash
        run: |
          git config user.name "Alofoke Bot"
          git config user.email "bot@alofoke.ai"
          git add data/
          git commit -m "ðŸ¤– Content $(date +'%Y-%m-%d %H:%M')" || echo "No changes"
          git push
