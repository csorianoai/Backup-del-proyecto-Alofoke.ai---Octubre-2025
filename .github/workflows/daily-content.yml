name: Daily Content Pipeline

on:
  schedule:
    - cron: "0 14 * * *"  # 10am ET
    - cron: "0 18 * * *"  # 2pm ET
    - cron: "0 22 * * *"  # 6pm ET
  workflow_dispatch: {}

jobs:
  generate-content:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Clear proxy env
        run: |
          unset HTTP_PROXY HTTPS_PROXY ALL_PROXY NO_PROXY || true

      - name: Write constraints
        run: |
          cat > constraints.txt << 'EOF'
          # Bloqueamos pares estables que evitan el bug de 'proxies'
          openai==1.51.0
          httpx==0.27.2
          EOF
          cat constraints.txt

      - name: Install dependencies (respecting constraints)
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: "1"
        run: |
          python -m pip install --upgrade pip
          # Desinstala restos para evitar mezclas
          pip uninstall -y openai httpx || true
          # Instala TODO respetando constraints
          pip install -r requirements.txt -c constraints.txt
          # Refuerzo: fuerzo openai/httpx exactos (por si algÃºn paquete empuja otra versiÃ³n)
          pip install --upgrade --force-reinstall --no-deps openai==1.51.0
          pip install --upgrade --force-reinstall --no-deps httpx==0.27.2

      - name: Verify runtime imports and file paths
        run: |
          echo "=== pip show ==="
          pip show openai httpx
          echo ""
          echo "=== python verify ==="
          python - << 'PY'
import inspect, openai, httpx, sys
print("openai version:", openai.__version__)
print("httpx  version:", httpx.__version__)
import openai._base_client as bc
print("base_client file:", inspect.getfile(bc))
print("sys.path:", sys.path)
PY
          echo ""
          echo "=== compose.py head ==="
          sed -n '1,40p' scripts/compose.py

      - name: Ingest sources
        env:
          PPLX_API_KEY: ${{ secrets.PPLX_API_KEY }}
          USE_PPLX: "0"
        run: |
          python scripts/ingest.py --countries do co --target 14

      - name: Compose articles
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/compose.py --mix "brief=5,explainer=3,trend=1"

      - name: Quality check
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/quality.py --threshold 0.80

      - name: Publish articles
        run: |
          python scripts/publish.py

      - name: Commit and push
        run: |
          git config user.name "Alofoke Bot"
          git config user.email "bot@alofoke.ai"
          git add data/
          git commit -m "ğŸ¤– Content $(date +'%Y-%m-%d %H:%M')" || echo "No changes"
          git push
