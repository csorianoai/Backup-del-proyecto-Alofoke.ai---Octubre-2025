name: Daily Content Pipeline

on:
  schedule:
    - cron: "0 14 * * *"
    - cron: "0 18 * * *"
    - cron: "0 22 * * *"
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  generate-content:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies with force reinstall
        run: |
          python -m pip install --upgrade pip
          pip cache purge
          pip uninstall -y openai httpx pydantic || true
          pip install --no-cache-dir pydantic==2.10.3
          pip install --no-cache-dir -r requirements.txt
      
      - name: Verify installation
        run: |
          echo "=== Installed versions ==="
          pip show pydantic openai httpx
          echo ""
          echo "=== Import test ==="
          python -c "import pydantic; print('âœ“ pydantic:', pydantic.__version__)"
          python -c "import openai; print('âœ“ openai:', openai.__version__)"
          python -c "import httpx; print('âœ“ httpx:', httpx.__version__)"
      
      - name: Ingest sources
        env:
          PPLX_API_KEY: ${{ secrets.PPLX_API_KEY }}
          USE_PPLX: "0"
        run: |
          python scripts/ingest.py --countries do co --target 14
      
      - name: Compose articles
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/compose.py --mix "brief=5,explainer=3,trend=1"
      
      - name: Quality check
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/quality.py --threshold 0.80
      
      - name: Publish articles
        run: |
          python scripts/publish.py
      
      - name: Commit and push
        run: |
          git config user.name "Alofoke Bot"
          git config user.email "bot@alofoke.ai"
          git add data/
          git diff-index --quiet HEAD || git commit -m "ðŸ¤– Content $(date +'%Y-%m-%d %H:%M')"
          git pull --rebase --autostash origin main
          git push
